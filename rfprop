#!/bin/bash

ver="0.4"
debug=0
lockfile="/tmp/.rfprop.lockfile"
lock_count_max=360
lock_timeout=10
ECHO="$(which echo) -e"
name=$(${ECHO} "${1}" | sed -e 's/[ÅÄ]/A/g' -e 's/[åä]/a/g' -e 's/Ö/O/g' -e 's/ö/o/g' -e 's/[^a-z^A-Z^0-9]/_/g')
workdir=$(mktemp -d "/tmp/${name}.XXXXXXXXXX")
scf="${name}.scf"
lrp="${name}.lrp"
qth="${name}.qth"
scfdirname="${workdir}/${scf}"
lrpdirname="${workdir}/${lrp}"
qthdirname="${workdir}/${qth}"
lat="${2}"
lon="${3}"
theight="${4}"
rheight="${5}"
freq="${6}"
erp="${7}"
pol="${8}"
cli="${9}"
db="${10}"
hd="${11}"
srtm="${12}"
varnum=12
workname="${name}_${freq}_${theight}_${rheight}_${erp}"
workdirname="${workdir}/${workname}"
currdir=$(pwd)
SPLAT="splat"
dots=74
dotsleep=2

usage()
{
	${ECHO} $(basename $0) version ${ver}
	${ECHO}
	${ECHO} Description:
	${ECHO} Helper script that generates kmz file
	${ECHO}
	${ECHO} $0 name lat lon theight rheight freq erp pol cli db hd sdf-dir
	${ECHO}
	${ECHO} "name\t- something describing"
	${ECHO} "lat\t- latitude in decimal form (e.g 57.694306)"
	${ECHO} "lon\t- longitude in decimal form (e.g -12.058889)"
	${ECHO} "theight\t- transmitter antenna height above ground (meters)"
	${ECHO} "rheight\t- receiver antenna height above ground (meters)"
	${ECHO} "freq\t- frequency (20-20000 MHz)"
	${ECHO} "erp\t- ERP (Watt)"
	${ECHO} "pol\t- polarization (0=horizontal, 1=vertical)"
	${ECHO} "cli\t- radio climate code (e.g 6 for Maritime Temperate, over land (consult \"man splat\" for whole table))"
	${ECHO} "db\t- lower threshold (dBuV/m)"
	${ECHO} "hd\t- use splat-hd (0=splat, 1=splat-hd)"
	${ECHO} "sdf-dir\t- absolute path to dir with sdf files"
}

take_lock()
{
	local counter=0
	local counter_tmp=0
	while [ ${counter} -lt ${lock_count_max} ]; do
		if [ -f ${lockfile} ]; then
			${ECHO} "Lock already taken. Someone is using rfprop. Waiting ("$(expr ${lock_count_max} - ${counter})")..."
			counter_tmp=$(expr $counter + 1)
			counter=${counter_tmp}
			sleep ${lock_timeout}
		else
			touch ${lockfile}
			return 0
		fi
	done

	${ECHO} "Timed out."

	return 1
}

make_dots()
{
	local dots_done=$1
	local dots_end=$(expr ${dots} - 4)
	trap "for d in {${dots_done}..${dots}}; do ${ECHO} -n '.'; done; ${ECHO}; return 2" USR1
	trap "for d in {${dots_done}..${dots_end}}; do ${ECHO} -n '.'; done; return 2" USR2
	while true; do
		if [ ${dots_done} -eq ${dots} ]; then
			${ECHO} "."
			dots_done=0
		else
			${ECHO} -n "."
			dots_done_tmp=$(expr ${dots_done} + 1)
			dots_done=${dots_done_tmp}
		fi
		trap "for d in {${dots_done}..${dots}}; do ${ECHO} -n '.'; done; ${ECHO}; return 2" USR1
		trap "for d in {${dots_done}..${dots_end}}; do ${ECHO} -n '.'; done; return 2" USR2
		sleep ${dotsleep}
	done
}

release_lock()
{
	[ -f ${lockfile} ] && rm -- ${lockfile}
}

gen_scf()
{
	${ECHO} -n "Generating scf file..."

cat << EOF >> ${scfdirname}
; SPLAT! Signal Color Definition File
130: 255,   0, 255
115: 192,   0, 192
110: 160,   0, 160
105: 128,   0, 128
100:   0,   0, 255
 95:   0,   0, 224
 90:   0,   0, 192
 85:   0,   0, 128
 80:   0, 255, 255
 75:   0, 224, 224
 70:   0, 192, 192
 65:   0, 128, 128
 60:   0, 255,   0
 55:   0, 224,   0
 50:   0, 192,   0
 45:   0, 160,   0
 40:   0, 128,   0
 35: 255, 255,   0
 30: 192, 192,   0
 25: 160, 160,   0
 20: 128, 128,   0
 15: 255,   0,   0
 10: 192,   0,   0
  5: 160,   0,   0
  0: 128,   0,   0
EOF

	${ECHO} "done"
}

gen_lrp()
{
	${ECHO} -n "Generating lrp file..."
cat << EOF >> ${lrpdirname}
15.000  ; Earth Dielectric Constant (Relative permittivity)
0.005   ; Earth Conductivity (Siemens per meter)
301.000 ; Atmospheric Bending Constant (N-units)
${freq} ; Frequency in MHz (20 MHz to 20 GHz)
${cli}  ; Radio Climate (5 = Continental Temperate)
1       ; Polarization (0 = Horizontal, 1 = Vertical)
0.50    ; Fraction of situations (50% of locations)
0.90    ; Fraction of time (90% of the time)
${erp}  ; Effective Radiated Power (ERP) in Watts (optional)
EOF
	${ECHO} "done"
}

gen_qth()
{
	${ECHO} -n "Generating qth file..."
	${ECHO} ${name} > ${qthdirname}
	${ECHO} ${lat} >> ${qthdirname}
	${ECHO} ${lon} >> ${qthdirname}
	${ECHO} ${theight}m >> ${qthdirname}
	${ECHO} "done"
}

run_splat()
{
	cd ${workdir}
	${SPLAT} -t ${qth} -L ${rheight} -kml -m 1.333 -olditm -sc -ngs -gc 8 -db ${db} -metric -d ${srtm} -o ${workname}
	cd ${currdir}
}

convert_ppm()
{
	local dotspid=0
	${ECHO} -n "Converting ppm..."
	make_dots 17 &
	dotspid=$!
	convert -transparent "#ffffff" ${workdirname}.ppm ${workdirname}_tmp.png
	rm ${workdirname}.ppm
	kill -USR1 ${dotspid}
	sleep ${dotsleep}
	${ECHO} -n "still converting..."
	make_dots 19 &
	dotspid=$!
	convert -alpha on -channel a -evaluate subtract 25% ${workdirname}_tmp.png ${workdirname}.png
	rm ${workdirname}_tmp.png
	kill -USR2 ${dotspid}
	sleep ${dotsleep}
	${ECHO} "done"
}

modify_kml()
{
	${ECHO} -n "Modifying kml..."
	sed -i "s|${workdir}||g" ${workdirname}.kml
	sed -i "s|<name>SPLAT! HD</name>|<name>${workname}</name>|" ${workdirname}.kml
	sed -i "s/${workname}\.ppm/${workname}\.png/" ${workdirname}.kml
	${ECHO} "done"
}

pack_kmz()
{
	zip -j ${workname}.kmz ${workdirname}.kml ${workdirname}-ck.ppm ${workdirname}.png ${lrpdirname} ${qthdirname} ${scfdirname} ${workdir}/${name}-site_report.txt
}

remove_workdir()
{
	${ECHO} -n "Cleaning up..."
	rm -rf -- ${workdir}
	${ECHO} "done"
}
${ECHO} "------------------------------------------"
${ECHO} "rfprop - https://github.com/airikka/rfprop"
${ECHO} "------------------------------------------"

if [ $# -ne ${varnum} ]; then
	usage
	remove_workdir
	exit 42
fi

if [ ${hd} -eq 1 ]; then
	SPLAT="splat-hd"
fi

if [ ${debug} -eq 1 ]; then
	${ECHO} ver: ${ver}
	${ECHO} debug: ${debug}
	${ECHO} lockfile: ${lockfile}
	${ECHO} lock_count_max: ${lock_count_max}
	${ECHO} lock_timeout: ${lock_timeout}
	${ECHO} ECHO: ${ECHO}
	${ECHO} name: ${name}
	${ECHO} workdir: ${workdir}
	${ECHO} scf: ${scf}
	${ECHO} lrp: ${lrp}
	${ECHO} qth: ${qth}
	${ECHO} scfdirname: ${scfdirname}
	${ECHO} lrpdirname: ${lrpdirname}
	${ECHO} qthdirname: ${qthdirname}
	${ECHO} lat: ${lat}
	${ECHO} lon: ${lon}
	${ECHO} theight: ${theight}
	${ECHO} rheight: ${rheight}
	${ECHO} freq: ${freq}
	${ECHO} erp: ${erp}
	${ECHO} pol: ${pol}
	${ECHO} cli: ${cli}
	${ECHO} db: ${db}
	${ECHO} hd: ${hd}
	${ECHO} srtm: ${srtm}
	${ECHO} varnum: ${varnum}
	${ECHO} workname: ${workname}
	${ECHO} workdirname: ${workdirname}
	${ECHO} currdir: ${currdir}
	${ECHO} SPLAT: ${SPLAT}
	${ECHO} dots: ${dots}
	${ECHO} dotsleep: ${dotsleep}
fi

take_lock
if [ $? -ne 0 ]; then
	remove_workdir
	exit 43
fi

gen_scf
gen_lrp
gen_qth
run_splat
convert_ppm
modify_kml
pack_kmz
remove_workdir
release_lock

exit 0
